// src/components/CredentialsPopup/utils/credentialDetectionUtils.js
/**
 * This utility provides functions for detecting credentials
 * and integrating with browser password systems
 */

/**
 * Check if the browser has stored credentials for a given URL
 * 
 * Note: Due to browser security restrictions, this is limited in capability
 * and requires Credential Management API support in the browser
 * 
 * @returns {Promise<boolean>} - Whether credentials are available
 */
export const checkForStoredCredentials = async () => {
  // Check if the Credential Management API is available
  if (!window.PasswordCredential) {
    console.log('Credential Management API not supported in this browser');
    return false;
  }
  
  try {
    // Try to get credentials from the credential manager
    const creds = await navigator.credentials.get({
      password: true,
      mediation: 'silent'
    });
    
    return !!creds;
  } catch (error) {
    console.error('Error checking for stored credentials:', error);
    return false;
  }
};

/**
 * Creates an HTML form for a target site that will be embedded in an iframe
 * This allows us to potentially capture credentials entered on that site
 * 
 * @param {string} targetUrl - The URL of the site to create a form for
 * @returns {string} - HTML for the form iframe
 */
export const createCredentialDetectionScript = (targetUrl) => {
  try {
    const url = new URL(targetUrl);
    const domain = url.hostname;
    
    return `
      <!-- This script helps detect when credentials are entered on ${domain} -->
      <script>
        // Set up a message listener to receive credential information from the site
        window.addEventListener('message', function(event) {
          // Verify the message is from the correct domain
          if (event.origin === '${url.origin}' && event.data?.type === 'CREDENTIAL_SUBMISSION') {
            // Forward the credentials to the parent window (our app)
            window.parent.postMessage({
              type: 'CREDENTIAL_DETECTED',
              url: '${targetUrl}',
              username: event.data.username,
              password: event.data.password
            }, '*');
          }
        });
      </script>
    `;
  } catch (error) {
    console.error('Error creating credential detection script:', error);
    return '';
  }
};

/**
 * Create a bookmarklet for saving credentials
 * 
 * @returns {string} - Bookmarklet code
 */
export const createCredentialBookmarklet = () => {
  const code = `
    javascript:(function(){
      // Get username and password fields
      const usernameField = document.querySelector('input[type="email"], input[type="text"], input[name="username"], input[name="email"]');
      const passwordField = document.querySelector('input[type="password"]');
      
      if (!usernameField || !passwordField) {
        alert("Couldn't find username or password fields on this page");
        return;
      }
      
      // Create credential object
      const credential = {
        username: usernameField.value,
        password: passwordField.value,
        url: window.location.href
      };
      
      // Open popup to save credential
      const popup = window.open(
        "about:blank",
        "Save Password",
        "width=400,height=300,resizable=yes"
      );
      
      // Send message to popup
      popup.document.write('<html><body><h2>Saving credential...</h2></body></html>');
      
      // Post message to parent
      window.opener && window.opener.postMessage({
        type: 'SAVE_CREDENTIAL',
        credential: credential
      }, '*');
    })();
  `;
  
  return encodeURI(code.replace(/\s+/g, ' ').trim());
};

/**
 * Generates HTML for the instruction card on how to save passwords
 * 
 * @returns {string} - HTML for the instruction card
 */
export const getCredentialDetectionInstructions = () => {
  return `
    <div style="font-family: system-ui, -apple-system, sans-serif; padding: 20px; border-radius: 8px; background-color: #f8fafc; box-shadow: 0 2px 10px rgba(0,0,0,0.08); max-width: 500px; margin: 0 auto;">
      <h3 style="color: #0f172a; margin-top: 0;">How to Save Passwords</h3>
      <ol style="color: #334155; line-height: 1.6;">
        <li>Click the bookmark link below when you're on a login page</li>
        <li>Enter your username and password on the website</li>
        <li>Submit the login form</li>
        <li>A popup will appear asking if you want to save the password</li>
      </ol>
      <p style="line-height: 1.5; color: #334155; font-style: italic;">
        Note: Due to browser security restrictions, you'll need to use the bookmark method to save passwords.
      </p>
      <p style="margin-top: 15px;">
        <a href="${createCredentialBookmarklet()}" style="
          display: inline-block;
          padding: 8px 15px;
          background-color: #3b82f6;
          color: white;
          text-decoration: none;
          border-radius: 6px;
          font-weight: 500;
        ">
          üìã Save My Password
        </a>
        <span style="margin-left: 10px; font-size: 0.9em; color: #64748b;">
          ‚Üê Drag this to your bookmarks bar!
        </span>
      </p>
    </div>
  `;
};